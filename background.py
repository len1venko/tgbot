from flask import Flask, request
import requests
import os
from threading import Thread

app = Flask(__name__)

# –¢–≤–æ–π —Ç–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞ –∏ Chat ID (–Ω–∞–π–¥–∏ —Å–≤–æ–π chat_id —á–µ—Ä–µ–∑ BotFather –∏–ª–∏ –¥—Ä—É–≥–æ–π —Å–ø–æ—Å–æ–±)
TOKEN = "7639996461:AAE1Grm61BEjUb6uGqdIz1pvmTO5z4n6-Ak"
CHAT_ID = "<879978878>"

# URL API Telegram –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
TELEGRAM_URL = f"https://api.telegram.org/bot{TOKEN}/sendMessage"

# –•—Ä–∞–Ω–∏–º –ø–æ—Å–ª–µ–¥–Ω–∏–π IP –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ –±–æ—Ç–∞
last_esp_ip = None

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è "/update_ip" (–ø–æ–ª—É—á–µ–Ω–∏–µ IP –æ—Ç ESP8266)
@app.route('/update_ip', methods=['POST'])
def update_ip():
    global last_esp_ip
    data = request.get_json()
    
    # –ü–æ–ª—É—á–∞–µ–º IP –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
    esp_ip = data.get("esp_ip", None)
    
    if esp_ip:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π IP
        last_esp_ip = esp_ip
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º IP –≤ Telegram
        message = f"üì° –ù–æ–≤—ã–π IP ESP8266: {esp_ip}"
        send_telegram_message(message)
        return "IP –æ–±–Ω–æ–≤–ª–µ–Ω", 200
    else:
        return "IP –Ω–µ –Ω–∞–π–¥–µ–Ω", 400

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
def send_telegram_message(message):
    payload = {
        "chat_id": CHAT_ID,
        "text": message
    }
    try:
        response = requests.post(TELEGRAM_URL, data=payload)
        response.raise_for_status()
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram: {e}")

def run():
    port = int(os.environ.get("PORT", 5000))
    app.run(host="0.0.0.0", port=port)

def keep_alive():
    t = Thread(target=run)
    t.start()

if __name__ == "__main__":
    keep_alive()
