from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
import os
import requests

TOKEN = "7639996461:AAE1Grm61BEjUb6uGqdIz1pvmTO5z4n6-Ak"
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è IP
main_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üåç –ü–æ—á–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è")],
        [KeyboardButton(text="üì° –ü–æ–∫–∞–∑–∞—Ç–∏ IP ESP8266")],  # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è IP
    ],
    resize_keyboard=True
)

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ IP (–±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è —á–µ—Ä–µ–∑ Flask)
last_esp_ip = None  # –≠—Ç–æ –±—É–¥–µ—Ç –æ–±–Ω–æ–≤–ª—è—Ç—å—Å—è —á–µ—Ä–µ–∑ Flask

@dp.message(Command("start"))
async def start_handler(message: types.Message):
    await message.answer("–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É –¥–ª—è –ø—Ä–æ–¥–æ–≤–∂–µ–Ω–Ω—è —Å–ø—ñ–ª–∫—É–≤–∞–Ω–Ω—è:", reply_markup=main_keyboard)

@dp.message()
async def menu_handler(message: types.Message):
    user_id = message.from_user.id  # –ü–æ–ª—É—á–∞–µ–º user_id –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    
    if message.text.strip() == "üåç –ü–æ—á–∞—Ç–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è":
        await message.answer("–í–∏–±–µ—Ä—ñ—Ç—å –¥—ñ—é:", reply_markup=main_keyboard)
        return
    
    # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è IP
    elif message.text.strip() == "üì° –ü–æ–∫–∞–∑–∞—Ç–∏ IP ESP8266":
        if last_esp_ip:
            await message.answer(f"üì° –ü–æ—Ç–æ—á–Ω–∏–π IP ESP8266: {last_esp_ip}")
        else:
            await message.answer("‚ùå IP –Ω–µ –æ—Ç—Ä–∏–º–∞–Ω–æ. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
        return

    # –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞
    await message.answer("–Ø –Ω–µ —Ä–æ–∑—É–º—ñ—é —Ü—é –∫–æ–º–∞–Ω–¥—É. –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –æ–ø—Ü—ñ—é –∑ –º–µ–Ω—é.")

async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    import asyncio
    asyncio.run(main())
